type Client
  @model
  @searchable
  @key(
    name: "clientByfirstName"
    fields: ["category", "firstName"]
    queryField: "clientByfirstName"
  )
  @key(
    name: "clientBylastName"
    fields: ["category", "lastName"]
    queryField: "clientBylastName"
  ) {
  id: ID
  category: String
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phone: AWSPhone!
  companyName: String!
  website: AWSURL!
  country: String!
  campaigns: [Campaign]!
    @connection(name: "CampaignClient", sortField: "endDate")
  notes: String
}
# add campaigns together
type Agent
  @model
  @key(
    name: "agentByDailyPoints"
    fields: ["category", "dailyPoints"]
    queryField: "agentByDailyPoints"
  )
  @key(
    name: "agentByWeeklyPoints"
    fields: ["category", "weeklyPoints"]
    queryField: "agentByWeeklyPoints"
  )
  @key(
    name: "agentByMonthlyPoints"
    fields: ["category", "monthlyPoints"]
    queryField: "agentByMonthlyPoints"
  )
  @key(
    name: "agentByTotalPoints"
    fields: ["category", "totalPoints"]
    queryField: "agentByTotalPoints"
  )
  @key(
    name: "agentByName"
    fields: ["category", "name"]
    queryField: "agentByName"
  ) {
  id: ID
  category: String
  name: String!
  email: AWSEmail!
  team: Team @connection(name: "TeamAgent")
  campaigns: [Campaign]! @connection(name: "CampaignAgent")
  kpis: [Kpi]! @connection(name: "AgentKpis", sortField: "target")
  dailyPoints: Int
  weeklyPoints: Int
  monthlyPoints: Int
  yearPoints: [YearPoints]! @connection(name: "YearPoints", sortField: "date")
  totalPoints: Int
}
type YearPoints @model {
  id: ID
  agent: Agent! @connection(name: "YearPoints")
  month: String
  date: AWSDate!
}

type Team @model {
  id: ID
  name: String!
  agents: [Agent]! @connection(name: "TeamAgent")
  dailyPoints: Int
  weeklyPoints: Int
  monthlyPoint: Int
  totalPoints: Int
}

type Campaign @model @searchable {
  # @key(
  #   name: "campaignByType"
  #   fields: ["type", "length"]
  #   queryField: "campaignTypeByLength"
  # )
  id: ID
  name: String!
  type: String!
  client: Client! @connection(name: "CampaignClient")
  agent: Agent! @connection(name: "CampaignAgent")
  startDate: AWSDate!
  endDate: AWSDate!
  status: String #cannot put Boolean for sorting, will be "true"/"false"
  length: Float!
  notes: String
  dailyReports: [DailyReport!]!
    @connection(name: "CampaignDailyReports", sortField: "createdAt")
}

type DailyReport @model @searchable {
  id: ID
  campaign: Campaign! @connection(name: "CampaignDailyReports")
  kpis: [Kpi!]! @connection(name: "DailyReportKpis")
  createdAt: AWSDateTime
}
#   date: AWSDate!

type Kpi
  @model
  @searchable
  @key(
    name: "kpiByTarget"
    fields: ["name", "target"]
    queryField: "kpiByTarget"
  ) {
  id: ID
  name: String! #category
  target: Int!
  coeff: Int!
  dailyReport: DailyReport! @connection(name: "DailyReportKpis")
  agent: Agent! @connection(name: "AgentKpis", sortField: "name")
}
#------------------------------------------------------------------------------------------------

# -                                                                                              -

#------------------------------------------------------------------------------------------------
# type Kpi @model @searchable {
#   id: ID
#   name: String!
#   dailyReports: [KpiDailyReports]! @connection(name: "DailyReportKpis")
# }
# type KpiDailyReports @model(queries: null) {
#   dailyReport: DailyReport! @connection(name: "KpiDailyReports") #kpiDailyReportsDailyReportId
#   kpi: Kpi! @connection(name: "DailyReportKpis") #kpiDailyReportsKpiId
#   target: Int!
#   coeff: Int!
# }

# type DailyReport @model @searchable {
#   id: ID
#   campaignName: String
#   date: AWSDate!
#   campaign: Campaign @connection(name: "CampaignDailyReports") #dailyReportCampaignId
#   kpis: [KpiDailyReports]! @connection(name: "KpiDailyReports")
# }
